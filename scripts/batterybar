#!/usr/bin/env bash
#  batterybar; displays battery load_state as a bar on i3blocks
#  
#  Copyright 2015 Keftaa <adnan.37h@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  

squares="■"


#There are 8 colors that reflect the current battery load_state when 
#discharging
dis_colors=("#FF0027" "#FF3B05" "#FFB923" "#FFD000" "#E4FF00" "#ADFF00"
			"#6DFF00" "#10BA00") 
charging_color="#00AFE3"
full_color="#FFFFFF"
ac_color="#535353"
color="#FFFFFF"
toggle=0
while getopts 1:2:3:4:5:6:7:8:c:f:a:h opt; do
    case "$opt" in
        1) dis_colors[0]="$OPTARG";;
        2) dis_colors[1]="$OPTARG";;
        3) dis_colors[2]="$OPTARG";;
        4) dis_colors[3]="$OPTARG";;
        5) dis_colors[4]="$OPTARG";;
        6) dis_colors[5]="$OPTARG";;
        7) dis_colors[6]="$OPTARG";;
        8) dis_colors[7]="$OPTARG";;
        c) charging_color="$OPTARG";;
        f) full_color="$OPTARG";;
        a) ac_color="$OPTARG";;
        h) printf "Usage: batterybar [OPTION] color
        When discharging, there are 8 [1-8] levels colors.
        You can specify custom colors, for example:
        
        batterybar -1 red -2 \"#F6F6F6\" -8 green
        
        You can also specify the colors for the charging, AC and
        charged states:
        
        batterybar -c green -f white -a \"#EEEEEE\"\n";
        exit 0;
    esac
done
while true
do
    load_state=$(cat /sys/class/power_supply/BAT0/capacity)
    status=$(cat /sys/class/power_supply/BAT0/status)
    AC=$(cat /sys/class/power_supply/AC0/online)
    last_capacity=$(cat /sys/class/power_supply/BAT0/energy_full)
    energy_now=$(cat /sys/class/power_supply/BAT0/energy_now)
    power_now=$(cat /sys/class/power_supply/BAT0/power_now)
    #loading
    if [ $power_now -gt 0 ];
    then
        if [ $AC -gt 0 ];
        then
            remaining_h=$(((last_capacity-energy_now)/power_now))
            remaining_m=$(((last_capacity-energy_now)*60/power_now-60*remaining_h))
        else
            remaining_h=$((energy_now/power_now))
            remaining_m=$((energy_now*60/power_now-60*remaining_h))
        fi

        if [ $remaining_h -lt 10 ];
        then
            remaining_h=0$remaining_h
        fi
        if [ $remaining_m -lt 10 ];
        then
            remaining_m=0$remaining_m
        fi
            remaining=\(${remaining_h}:${remaining_m}\)
    else
        remaining=\(undef\)
	if [ $load_state -gt 90 ]; then
	    status="Full"
        fi
    fi
    if [  $load_state -lt 20  ]; then

        squares=""
    elif [ $load_state -lt 40 ]; then
        squares=""
    elif [ $load_state -lt 60 ]; then
        squares=""
    elif [ $load_state -lt 80 ]; then
        squares=" "
    else 
        squares=""
    fi
    sleep_duration=5
    case "$status" in
    "Charging")
        color="$charging_color"
    ;;
    "Full")
        color="$full_color"
    ;;
    "AC")
       color="$ac_color"
    ;; 
    "Discharging"|"Unknown")
        if (( load_state >= 0 && load_state < 10 )); then
            sleep_duration=.$((load_state+1))       
            if(( toggle == 1 )); then
                toggle=0 
                color="${dis_colors[0]}"
            else
                toggle=1
	        color="#FF0027"
            fi        
        elif (( load_state >= 10 && load_state < 20 )); then
            color="${dis_colors[1]}"
        elif (( load_state >= 20 && load_state < 30 )); then
            color="${dis_colors[2]}"
        elif (( load_state >= 30 && load_state < 40 )); then
            color="${dis_colors[3]}"
        elif (( load_state >= 40 && load_state < 60 )); then
            color="${dis_colors[4]}"
        elif (( load_state >= 60 && load_state < 70 )); then
            color="${dis_colors[5]}"
        elif (( load_state >= 70 && load_state < 80 )); then
            color="${dis_colors[6]}"
        elif (( load_state >= 80 )); then
            color="${dis_colors[7]}"
        fi
    ;;
    esac

    if [ $status = "Full" ]; then
echo "<span foreground=\"$color\">${squares} $load_state%</span>"
else
    echo "<span foreground=\"$color\">${squares} $load_state% $remaining</span>"
fi
    sleep $sleep_duration
done

